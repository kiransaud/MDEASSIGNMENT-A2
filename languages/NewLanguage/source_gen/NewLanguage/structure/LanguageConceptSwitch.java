package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Account = 0;
  public static final int AccountList = 1;
  public static final int AccountType = 2;
  public static final int AccountTypeList = 3;
  public static final int FinanciaEntitylList = 4;
  public static final int FinancialEntity = 5;
  public static final int FinancialProduct = 6;
  public static final int FinancialProductList = 7;
  public static final int FinancialProductType = 8;
  public static final int FinancialProductTypeList = 9;
  public static final int FinancialProductTypeRef = 10;
  public static final int Party = 11;
  public static final int PartyList = 12;
  public static final int ROOT = 13;
  public static final int Regulation = 14;
  public static final int RegulatoryEntity = 15;
  public static final int RegulatoryEntityList = 16;
  public static final int RegulatoryEntityRef = 17;
  public static final int RegulatoryEntityType = 18;
  public static final int SpecificAttributes = 19;
  public static final int TransactionTypeList = 20;
  public static final int TranscationModeList = 21;
  public static final int TransctionList = 22;
  public static final int TransctionMode = 23;
  public static final int Transctions = 24;
  public static final int TransctionsType = 25;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x437c9db1d8f44db9L, 0xb294bc781192d511L);
    builder.put(0x713163e567bb5240L, Account);
    builder.put(0x713163e567bb5283L, AccountList);
    builder.put(0x713163e567bb58e1L, AccountType);
    builder.put(0x713163e567c2fa5dL, AccountTypeList);
    builder.put(0x713163e567bea9d4L, FinanciaEntitylList);
    builder.put(0x713163e567bb523fL, FinancialEntity);
    builder.put(0x713163e567bb5212L, FinancialProduct);
    builder.put(0x713163e567fc5574L, FinancialProductList);
    builder.put(0x713163e567bf04c5L, FinancialProductType);
    builder.put(0x713163e567bf04c1L, FinancialProductTypeList);
    builder.put(0x713163e567c2fb2cL, FinancialProductTypeRef);
    builder.put(0x713163e567bb5242L, Party);
    builder.put(0x713163e567bd7993L, PartyList);
    builder.put(0x7da28be9f02c46d1L, ROOT);
    builder.put(0x713163e567bb5245L, Regulation);
    builder.put(0x713163e567bb5244L, RegulatoryEntity);
    builder.put(0x713163e567bb57f7L, RegulatoryEntityList);
    builder.put(0x713163e567c2f7f7L, RegulatoryEntityRef);
    builder.put(0x713163e567bb5261L, RegulatoryEntityType);
    builder.put(0x713163e567bb5263L, SpecificAttributes);
    builder.put(0x713163e567c2fcbfL, TransactionTypeList);
    builder.put(0x713163e567c2fc76L, TranscationModeList);
    builder.put(0x713163e567bb5285L, TransctionList);
    builder.put(0x713163e567bb526eL, TransctionMode);
    builder.put(0x713163e567bb5241L, Transctions);
    builder.put(0x713163e567bb525bL, TransctionsType);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
